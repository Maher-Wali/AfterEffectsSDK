name: Build Cross-Platform Plugin

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable

    - name: Verify Rez tool
      run: |
        if ! command -v Rez; then
          echo "❌ Rez tool not found! Installing Xcode command-line tools..."
          xcode-select --install || true  # Ignore if already installed
          echo "❌ Rez still not found after attempting install"
          exit 1
        else
          echo "✅ Rez tool found at: $(command -v Rez)"
        fi

    - name: Create Info.plist template
      run: |
        mkdir -p Examples/AEGP/Panelator
        cat > Examples/AEGP/Panelator/Info.plist.in << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>CFBundleDevelopmentRegion</key>
            <string>en</string>
            <key>CFBundleExecutable</key>
            <string>${MACOSX_BUNDLE_EXECUTABLE_NAME}</string>
            <key>CFBundleIdentifier</key>
            <string>${MACOSX_BUNDLE_IDENTIFIER}</string>
            <key>CFBundleInfoDictionaryVersion</key>
            <string>6.0</string>
            <key>CFBundleName</key>
            <string>${MACOSX_BUNDLE_BUNDLE_NAME}</string>
            <key>CFBundlePackageType</key>
            <string>BNDL</string>
            <key>CFBundleShortVersionString</key>
            <string>${MACOSX_BUNDLE_SHORT_VERSION_STRING}</string>
            <key>CFBundleVersion</key>
            <string>${MACOSX_BUNDLE_BUNDLE_VERSION}</string>
            <key>CSResourcesFileMapped</key>
            <true/>
            <key>LSMinimumSystemVersion</key>
            <string>10.13</string>
        </dict>
        </plist>
        EOF

    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release ..

    - name: Build plugin
      working-directory: build
      run: cmake --build . --config Release

    - name: Verify PkgInfo
      working-directory: build
      run: |
        PLUGIN_PATH=$(find . -name "*.plugin" | head -1)
        if [ -n "$PLUGIN_PATH" ]; then
          PKGINFO_PATH="$PLUGIN_PATH/Contents/PkgInfo"
          if [ -f "$PKGINFO_PATH" ]; then
            echo "✅ PkgInfo present at $PKGINFO_PATH"
            echo "Contents (hex):"
            xxd "$PKGINFO_PATH"
            echo "Contents (string):"
            cat -v "$PKGINFO_PATH"
          else
            echo "❌ PkgInfo NOT FOUND at $PKGINFO_PATH"
            find "$PLUGIN_PATH/Contents" -type f -ls  # List all Contents files for debug
            exit 1
          fi
        fi

    - name: Verify build
      working-directory: build
      run: |
        echo "Build artifacts:"
        find . -name "*.plugin" -exec ls -la {} \;
        find . -name "*.plugin" -exec file {} \;

        PLUGIN_PATH=$(find . -name "*.plugin" | head -1)
        if [ -n "$PLUGIN_PATH" ]; then
            echo "Plugin bundle contents:"
            find "$PLUGIN_PATH" -type f -exec ls -la {} \;

            echo "Executable dependencies:"
            find "$PLUGIN_PATH" -name "AEPathLink" -exec otool -L {} \; || true
        fi

    - name: Verify PiPL resource
      working-directory: build
      run: |
        if [ ! -f AEPathLink.plugin/Contents/Resources/AEPathLink.rsrc ]; then
          echo "❌ PiPL .rsrc file not found!"
          exit 1
        else
          echo "✅ PiPL .rsrc present"
        fi

    - name: Package for distribution
      working-directory: build
      run: |
        PLUGIN_PATH=$(find . -name "*.plugin" | head -1)
        if [ -n "$PLUGIN_PATH" ]; then
            cd "$(dirname "$PLUGIN_PATH")"
            zip -r "$GITHUB_WORKSPACE/AEPathLink-macOS.zip" "$(basename "$PLUGIN_PATH")"
        else
            echo "No plugin found!"
            exit 1
        fi



    - name: Upload plugin
      uses: actions/upload-artifact@v4
      with:
        name: AEPathLink-macOS
        path: ${{ github.workspace }}/AEPathLink-macOS.zip
        retention-days: 30